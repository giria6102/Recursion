void solve(string digit,string output,int index,vector<string>&ans,string mapping[]){
    if(index>=digit.length()){
        ans.push_back(output);
        return ;
    }

    int num=digit[index]-'0';
    string v=mapping[num];
    for(int i=0;i<v.length();i++){
        output.push_back(v[i]);
        solve(digit,output,index+1,ans,mapping);
        output.pop_back();
    }
}
    vector<string> letterCombinations(string digits) {

        vector<string>ans;

        if(digits.length()==0){
            return ans;
        }
        string output;

        string mapping[10] = {"", "", "abc", "def", "ghi", "jkl","mno","pqrs","tuv","wxyz"};

        solve(digits,output,0,ans,mapping);

        return ans;
        
    }
};
